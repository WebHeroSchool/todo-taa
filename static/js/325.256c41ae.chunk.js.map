{"version":3,"file":"static/js/325.256c41ae.chunk.js","mappings":"0LAqBMA,GAASC,EAAAA,EAAAA,OAAK,kBAAM,iCACpBC,GAAWD,EAAAA,EAAAA,OAAK,kBAAM,iCAMtBE,EAAoB,SAAAC,GAAK,OAAIC,EAAAA,EAAAA,GAAUH,GAAD,UACvCE,KAcL,WAAeE,EAAAA,EAAAA,KACb,SAAAC,GAAK,MAAK,CACRC,SAAUD,EAAMC,SAChBC,MAAOF,EAAME,SAEf,CACEC,SAAAA,EAAAA,GACAC,aAAAA,EAAAA,GACAC,cAAAA,EAAAA,IARJ,EAV0B,SAAAR,GAAK,OAC7B,SAAC,EAAAS,SAAD,CAAUC,UAAU,SAACd,EAAD,IAApB,UACE,SAACG,GAAD,QACEY,IAXG,0CAYEX,U,sDC/BLY,EAAI,gBADC,sEAwCX,IArCkB,SAACC,EAAWb,GA+B5B,OA9BAc,EAAAA,EAAAA,YAAU,WACJd,EAAMe,OACRf,EAAMO,cAAa,GAErBF,MAAML,EAAMW,IACV,CACEK,OAAQ,MACRC,QAAS,CACP,cAAiBL,KAIpBM,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GACiB,cAAjBA,EAAKE,QACPrB,EAAMQ,cAAcW,EAAKE,SACA,IAAhBF,EAAKG,OACdtB,EAAMQ,cAAc,SAEpBR,EAAMM,SAASa,MAGlBI,OAAM,SAAAJ,GAAI,OAAInB,EAAMQ,cAAc,cAAeW,MACjDD,MAAK,kBAAMlB,EAAMO,cAAa,QAChC,CACDP,EAAMK,MAAMmB,UACZxB,EAAMW,OAKN,SAACE,GAAD,UAAgBb","sources":["components/Contacts/ContactsContainer.jsx","components/hoc/withFetch/withFetch.jsx"],"sourcesContent":["import {\n  Suspense,\n  lazy,\n} from 'react';\n\nimport {\n  connect,\n} from 'react-redux';\n\nimport {\n  updateContactsStore as setState,\n} from '../../store/actions/updateStore';\nimport {\n  setContactsIsLoading as setIsLoading,\n} from '../../store/actions/repos/setIsLoading';\nimport {\n  setContactsIsError as setFetchError,\n} from '../../store/actions/fetchError';\n\nimport withFetch from '../hoc/withFetch/withFetch';\n\nconst Loader = lazy(() => import('../Loader/Loader'));\nconst Contacts = lazy(() => import('./Contacts'));\n\n\nconst url = `https://api.github.com/users/chiga2030`;\n\n\nconst ContactsWithFetch = props => withFetch(Contacts, {\n  ...props,\n});\n\n\nconst ContactsContainer = props => (\n  <Suspense fallback={<Loader />}>\n    <ContactsWithFetch\n      url={ url }\n      { ...props }\n    />\n  </Suspense>\n);\n\n\nexport default connect(\n  state => ({\n    contacts: state.contacts,\n    fetch: state.fetch,\n  }),\n  {\n    setState,\n    setIsLoading,\n    setFetchError,\n  },\n)(ContactsContainer);\n","import {\n  useEffect,\n} from 'react';\n\n\nconst ak = 'dXNlcm5hbWU6Z2hwX0lsZTVHbWJSWkN4SVdNTjdtR01sVWtENlJYd3oxWTJGSDR4Nw';\nconst auth = `Basic ${ak}`;\n\nconst withFetch = (Component, props) => {\n  useEffect(() => {\n    if (props.error) {\n      props.setIsLoading(true);\n    };\n    fetch(props.url,\n      {\n        method: 'GET',\n        headers: {\n          'Authorization': auth,\n        },\n      }\n    )\n      .then(data => data.json())\n      .then(data => {\n        if (data.message === 'Not Found') {\n          props.setFetchError(data.message);\n        } else if (data.length === 0) {\n          props.setFetchError('empty');\n        } else {\n          props.setState(data);\n        }\n      })\n      .catch(data => props.setFetchError('fetch error', data))\n      .then(() => props.setIsLoading(false));\n  }, [\n    props.fetch.isRefresh,\n    props.url,\n  ]);\n\n\n  return (\n    <Component { ...props } />\n  );\n};\n\n\nexport default withFetch;\n"],"names":["Loader","lazy","Contacts","ContactsWithFetch","props","withFetch","connect","state","contacts","fetch","setState","setIsLoading","setFetchError","Suspense","fallback","url","auth","Component","useEffect","error","method","headers","then","data","json","message","length","catch","isRefresh"],"sourceRoot":""}