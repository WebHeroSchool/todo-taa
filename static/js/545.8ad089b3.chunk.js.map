{"version":3,"file":"static/js/545.8ad089b3.chunk.js","mappings":"+NACA,GAAgB,QAAU,2BAA2B,UAAY,8B,SCkCjE,EA3BkB,SAAAA,GAAK,OACrB,iBAAKC,UAAWC,EAAAA,QAAhB,WACE,SAACC,EAAA,EAAD,CACEC,MAAQJ,EAAMK,YACdC,WAAaN,EAAMM,WACnBL,UAAWC,EAAAA,UACXK,WAAW,EACXC,GAAG,iBACHC,MAAM,4EACNC,OAAO,QACPC,MAAQX,EAAMY,WACdC,QAAQ,WACRC,SAAWd,EAAMe,kBACjBC,UAAWhB,EAAMiB,sBAEnB,SAACC,EAAA,EAAD,CACEjB,UAAWC,EAAAA,OACXiB,MAAM,UACNC,QAAUpB,EAAMqB,cAChBC,MAAM,wFAJR,UAME,SAACC,EAAA,EAAD,CAAaC,SAAS,iBCkE5B,GAAeC,EAAAA,EAAAA,KACb,SAAAC,GAAK,MAAK,CACRC,MAAOD,EAAME,MAAMD,SAErB,CACEE,WAAAA,EAAAA,GALJ,EA9E2B,SAAA7B,GACzB,OAGI8B,EAAAA,EAAAA,UAAS,IAHb,eACElB,EADF,KAEEmB,EAFF,KAKA,GAGID,EAAAA,EAAAA,UAAS,KAHb,eACExB,EADF,KAEE0B,EAFF,KAKA,GAGIF,EAAAA,EAAAA,WAAS,GAHb,eACEzB,EADF,KAEE4B,EAFF,KAKMC,EAAiB,WAAoC,IAAnCC,EAAkC,uDAA3B,iHAC7BF,GAAe,GACfD,EAAcG,IAGVC,EAAoB,WACxBH,GAAe,GACfD,EAAc,MAwBVK,EAAoB,WACpBzB,IAtB4BZ,EAAM2B,MAAMW,MAC5C,SAAAC,GAAO,OAAIA,EAAQ5B,QAAUC,EAAW4B,kBAGxCxC,EAAM6B,WAAWjB,EAAW4B,eAC5BT,EAAc,IAmBZK,KAEAF,EAAe,kLAcnB,OACE,SAAC,EAAD,CACE7B,YAAcA,EACdC,WAAaA,EACbM,WAAaA,EACbG,kBArCsB,SAAA0B,GACxB,IACMC,EAAS,IAAIC,OAAJ,sEACsBC,EAAAA,EADtB,MAEf,MAHiB,sBAGJC,KAAKJ,EAAMK,OAAOnC,OACtBuB,EAAe,uJACbQ,EAAOG,KAAKJ,EAAMK,OAAOnC,OAC3BuB,EAAe,yHAExBH,EAAcU,EAAMK,OAAOnC,YAC3ByB,MA4BEnB,mBAhBuB,SAAAwB,GACN,UAAfA,EAAMM,MAAmC,gBAAfN,EAAMM,MAClCV,KAeAhB,cAXkB,WACpBgB,W,qDChFG,IAAMO,EAAe,GAEtBI,EAAS,IAAIL,OAAJ,YAAgBC,EAAhB,MAgBf,IAbuB,SAAAK,GAGrB,IAFA,IAAMC,EAAiBD,EAAOE,MAAM,KAE3BC,EAAQ,EAAGA,EAAQF,EAAeR,OAAQU,IACjD,GAAIJ,EAAOH,KAAKK,EAAeE,IAC7B,OAAO,EAIX,OAAO","sources":["webpack://todo/./src/components/InputItem/InputItem.module.css?8768","components/InputItem/InputItem.jsx","components/InputItem/InputItemContainer.jsx","utils/isNormalLength.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"InputItem_wrapper__PgGEs\",\"textField\":\"InputItem_textField__gseUj\"};","import {\n  TextField,\n  Button,\n} from '@material-ui/core';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport styles from './InputItem.module.css';\n\n\nconst InputItem = props => (\n  <div className={styles.wrapper}>\n    <TextField\n      error={ props.errorStatus }\n      helperText={ props.helperText }\n      className={styles.textField}\n      fullWidth={true}\n      id=\"outlined-basic\"\n      label=\"Добавить дело\"\n      margin=\"dense\"\n      value={ props.inputValue }\n      variant=\"outlined\"\n      onChange={ props.onChangeTextField }\n      onKeyDown={props.onKeyDownTextField}\n    />\n    <Button\n      className={styles.button}\n      color=\"primary\"\n      onClick={ props.onClickButton }\n      title=\"Добавить задачу\"\n    >\n      <PostAddIcon fontSize=\"medium\" />\n    </Button>\n  </div>\n);\n\n\nexport default InputItem;\n","import {\n  connect,\n} from 'react-redux';\nimport {\n  createItem,\n} from '../../store/actions/createItemAction';\nimport {\n  useState,\n} from 'react';\n\nimport {\n  normalLength,\n} from '../../utils/isNormalLength';\n\nimport InputItem from './InputItem';\n\n\nconst InputItemContainer = props => {\n  const [\n    inputValue,\n    setInputvalue,\n  ] = useState('');\n\n  const [\n    helperText,\n    setHelperText,\n  ] = useState(' ');\n\n  const [\n    errorStatus,\n    setErrorStatus,\n  ] = useState(false);\n\n  const addErrorStatus = (text = 'Нужно заполнить поле') => {\n    setErrorStatus(true);\n    setHelperText(text);\n  };\n\n  const removeErrorStatus = () => {\n    setErrorStatus(false);\n    setHelperText(' ');\n  };\n\n  const checkElementInStore = () => props.items.some(\n    element => element.value === inputValue.toUpperCase());\n\n  const submitData = () => {\n    props.createItem(inputValue.toUpperCase());\n    setInputvalue('');\n  };\n\n  const onChangeTextField = event => {\n    const textOnly = /^[0-9\\/*\\@#$%^&-+ ]/;\n    const length = new RegExp(\n      `[а-яА-ЯёЁa-zA-Z0-9\\/*\\@#$%^&-+]{${normalLength}}`);\n    if (textOnly.test(event.target.value)) {\n      return addErrorStatus('Должно начинаться с прописи');\n    } else if (length.test(event.target.value)) {\n      return addErrorStatus('Слишком длинное слово');\n    }\n    setInputvalue(event.target.value);\n    removeErrorStatus();\n  };\n\n  const submitDataHandler = () => {\n    if (inputValue && !checkElementInStore()) {\n      submitData();\n      removeErrorStatus();\n    } else {\n      addErrorStatus('Такое дело уже добавлено в список');\n    }\n  };\n\n  const onKeyDownTextField = event => {\n    if (event.code === 'Enter' || event.code === 'NumpadEnter') {\n      submitDataHandler();\n    }\n  };\n\n  const onClickButton = () => {\n    submitDataHandler();\n  };\n\n  return (\n    <InputItem\n      errorStatus={ errorStatus }\n      helperText={ helperText }\n      inputValue={ inputValue }\n      onChangeTextField={ onChangeTextField }\n      onKeyDownTextField={ onKeyDownTextField }\n      onClickButton={ onClickButton }\n    />\n  );\n};\n\nexport default connect(\n  state => ({\n    items: state.todos.items,\n  }),\n  {\n    createItem,\n  },\n)(InputItemContainer);\n","export const normalLength = 22;\n\nconst regExp = new RegExp(`.{${normalLength}}`);\n\n\nconst isNormalLength = string => {\n  const separateString = string.split(' ');\n\n  for (let index = 0; index < separateString.length; index++) {\n    if (regExp.test(separateString[index])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n\nexport default isNormalLength;\n"],"names":["props","className","styles","TextField","error","errorStatus","helperText","fullWidth","id","label","margin","value","inputValue","variant","onChange","onChangeTextField","onKeyDown","onKeyDownTextField","Button","color","onClick","onClickButton","title","PostAdd","fontSize","connect","state","items","todos","createItem","useState","setInputvalue","setHelperText","setErrorStatus","addErrorStatus","text","removeErrorStatus","submitDataHandler","some","element","toUpperCase","event","length","RegExp","normalLength","test","target","code","regExp","string","separateString","split","index"],"sourceRoot":""}