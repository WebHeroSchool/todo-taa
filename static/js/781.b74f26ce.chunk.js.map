{"version":3,"file":"static/js/781.b74f26ce.chunk.js","mappings":"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","sources":["webpack://todo/./src/components/FilterListItems/FilterListItems.module.css?15d7","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/isValueSelected.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/ToggleButtonGroup.js","../node_modules/@material-ui/lab/esm/ToggleButton/ToggleButton.js","components/FilterListItems/FilterListItems.jsx","components/FilterListItems/FilterListItemsContainer.jsx","webpack://todo/./src/components/Footer/Footer.module.css?bcd4","components/Footer/Footer.jsx","components/Footer/FooterContainer.jsx","../node_modules/@material-ui/core/esm/Button/Button.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonText\":\"FilterListItems_buttonText__m7hmF\",\"filterWrapper\":\"FilterListItems_filterWrapper__kN8dJ\"};","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport isValueSelected from './isValueSelected';\nimport { withStyles } from '@material-ui/core/styles';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {},\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1,\n        borderTop: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    }\n  };\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$exclusive = props.exclusive,\n      exclusive = _props$exclusive === void 0 ? false : _props$exclusive,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"exclusive\", \"onChange\", \"orientation\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    var index = value && value.indexOf(buttonValue);\n    var newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  var handleExclusiveChange = function handleExclusiveChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], child.props.className),\n      onChange: exclusive ? handleExclusiveChange : handleChange,\n      selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n      size: child.props.size || size\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the button.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * If `true`, only allow one of the child ToggleButton values to be selected.\r\n   */\n  exclusive: PropTypes.bool,\n\n  /**\r\n   * Callback fired when the value changes.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {any} value of the selected buttons. When `exclusive` is true\r\n   * this is a single value; when false an array of selected values. If no value\r\n   * is selected and `exclusive` is true the value is null; when false an empty array.\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * The group orientation (layout flow direction).\r\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\r\n   * The size of the buttons.\r\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\r\n   * The currently selected value within the group or an array of selected\r\n   * values when `exclusive` is false.\r\n   *\r\n   * The value must have reference equality with the option in order to be selected.\r\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButtonGroup'\n})(ToggleButtonGroup);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { alpha, withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      borderRadius: theme.shape.borderRadius,\n      padding: 11,\n      border: \"1px solid \".concat(alpha(theme.palette.action.active, 0.12)),\n      color: alpha(theme.palette.action.active, 0.38),\n      '&$selected': {\n        color: theme.palette.action.active,\n        backgroundColor: alpha(theme.palette.action.active, 0.12),\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.action.active, 0.15)\n        },\n        '& + &': {\n          borderLeft: 0,\n          marginLeft: 0\n        }\n      },\n      '&$disabled': {\n        color: alpha(theme.palette.action.disabled, 0.12)\n      },\n      '&:hover': {\n        textDecoration: 'none',\n        // Reset on mouse devices\n        backgroundColor: alpha(theme.palette.text.primary, 0.05),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the `label` wrapper element. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 7,\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: 15,\n      fontSize: theme.typography.pxToRem(15)\n    }\n  };\n};\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disabled\", \"disableFocusRipple\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, disabled && classes.disabled, selected && classes.selected, size !== 'medium' && classes[\"size\".concat(capitalize(size))]),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    \"aria-pressed\": selected\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes = {\n  /**\r\n   * The content of the button.\r\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, the  keyboard focus ripple will be disabled.\r\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\r\n   * If `true`, the ripple effect will be disabled.\r\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onClick: PropTypes.func,\n\n  /**\r\n   * If `true`, the button will be rendered in an active state.\r\n   */\n  selected: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\r\n   * The value to associate with the button when selected in a\r\n   * ToggleButtonGroup.\r\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButton'\n})(ToggleButton);","import {\n  useState,\n} from 'react';\nimport styles from './FilterListItems.module.css';\nimport {\n  ToggleButton,\n  ToggleButtonGroup,\n} from '@material-ui/lab';\n\n\nconst FilterListItems = props => {\n  const [\n    alignment,\n    setAlignment,\n  ] = useState('left');\n\n  const handleAlignment = (event, newAlignment) => {\n    if (newAlignment !== null) {\n      return setAlignment(newAlignment);\n    };\n  };\n\n\n  return (\n    <div className={styles.filterWrapper}>\n      <ToggleButtonGroup\n        size=\"small\"\n        value={alignment}\n        exclusive\n        onChange={handleAlignment}\n        aria-label=\"text alignment\"\n      >\n        <ToggleButton\n          value=\"left\"\n          aria-label=\"left aligned\"\n          className={styles.buttonText}\n          onClick={() => props.setAllFilter()}\n        >\n          Все\n        </ToggleButton>\n        <ToggleButton\n          value=\"center\"\n          aria-label=\"centered\"\n          className={styles.buttonText}\n          onClick={() => props.setActiveFilter()}\n        >\n          Активные\n        </ToggleButton>\n        <ToggleButton\n          value=\"right\"\n          aria-label=\"right aligned\"\n          className={styles.buttonText}\n          onClick={() => props.setCompletedFilter()}\n        >\n          Выполненные\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </div>\n  );\n};\n\n\nexport default FilterListItems;\n","import {\n  connect,\n} from 'react-redux';\n\nimport FilterListItems from './FilterListItems';\n\nimport {\n  setAllFilter,\n  setActiveFilter,\n  setCompletedFilter,\n} from '../../store/actions/todo/setFilters';\n\nconst FilterListItemsContainer = props => (\n  <FilterListItems {...props} />\n);\n\n\nexport default connect(\n  null,\n  {\n    setAllFilter,\n    setActiveFilter,\n    setCompletedFilter,\n  },\n)(FilterListItemsContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"Footer_footer__kXlYa\",\"buttonText\":\"Footer_buttonText__VeNB4\",\"countWrapper\":\"Footer_countWrapper__hHH8P\",\"buttonsWrapper\":\"Footer_buttonsWrapper__KG+-A\",\"deleteButton\":\"Footer_deleteButton__oc0hr\"};","import FilterListItemsContainer from\n  '../FilterListItems/FilterListItemsContainer';\nimport {\n  Button,\n} from '@material-ui/core';\nimport styles from './Footer.module.css';\n\nconst Footer = ({\n  count,\n  ...props\n}) => (\n  <div className={ styles.footer }>\n    <span className={ styles.countWrapper }>\n      Кол-во дел: { count ? count : 0 }\n    </span>\n    <span className={ styles.buttonsWrapper }>\n      <FilterListItemsContainer />\n      <Button\n        className={ styles.deleteButton }\n        variant=\"outlined\"\n        color=\"secondary\"\n        size=\"small\"\n        onClick={ () => props.onClearCompleted() }\n      >\n        <span className={ styles.buttonText }>Очистить выполненные</span>\n      </Button>\n    </span>\n  </div>\n);\n\n\nexport default Footer;\n","import {\n  connect,\n} from 'react-redux';\n\nimport {\n  onClearCompleted,\n} from '../../store/actions/todo/setFilters';\n\nimport Footer from './Footer';\n\n\nconst FooterContainer = props => (\n  <Footer\n    count={ props.count } {...props}\n  />\n);\n\n\nexport default connect(\n  state => ({\n    count: state.todos.count,\n  }),\n  {\n    onClearCompleted,\n  },\n)(FooterContainer);\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(alpha(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(alpha(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);"],"names":["isValueSelected","value","candidate","undefined","Array","isArray","indexOf","ToggleButtonGroup","React","props","ref","children","classes","className","_props$exclusive","exclusive","onChange","_props$orientation","orientation","_props$size","size","other","_objectWithoutProperties","handleChange","event","buttonValue","newValue","index","slice","splice","concat","handleExclusiveChange","_extends","role","clsx","root","vertical","child","grouped","capitalize","selected","withStyles","theme","display","borderRadius","shape","flexDirection","groupedHorizontal","marginLeft","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","marginTop","borderTop","name","ToggleButton","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","onClick","ButtonBase","focusRipple","isDefaultPrevented","label","typography","button","boxSizing","padding","border","alpha","palette","action","active","color","backgroundColor","textDecoration","text","primary","width","alignItems","justifyContent","sizeSmall","fontSize","pxToRem","sizeLarge","useState","alignment","setAlignment","styles","newAlignment","setAllFilter","setActiveFilter","setCompletedFilter","connect","count","Button","variant","onClearCompleted","state","todos","_props$color","_props$component","component","_props$disableElevati","disableElevation","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","startIconProp","startIcon","_props$type","type","_props$variant","colorInherit","focusVisible","minWidth","transition","transitions","create","duration","short","hoverOpacity","textPrimary","main","textSecondary","secondary","outlined","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","marginRight","iconSizeSmall","iconSizeMedium","iconSizeLarge"],"sourceRoot":""}