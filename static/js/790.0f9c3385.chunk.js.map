{"version":3,"file":"static/js/790.0f9c3385.chunk.js","mappings":"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","sources":["webpack://todo/./src/components/DndList/DndList.module.css?b672","webpack://todo/./src/components/TodoItem/TodoItem.module.css?a40f","components/DndList/handlersUtils.js","components/DndList/handleEvents.js","components/TodoItem/TodoItem.jsx","utils/onSingleDoubleClick.js","components/TodoItem/TodoItemContainer.jsx","components/DndList/DndList.jsx","components/DndList/DndListContainer.jsx","components/ItemList/ItemList.jsx","components/ItemList/ItemListContainer.jsx","utils/isNormalLength.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"DndList_list__q+5qk\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"TodoItem_item__FsVjq\",\"draggable\":\"TodoItem_draggable__7VAqp\",\"touchActionsOff\":\"TodoItem_touchActionsOff__RGtYo\",\"itemValueWrapper\":\"TodoItem_itemValueWrapper__FBWF3\",\"itemValue\":\"TodoItem_itemValue__mkxvo\",\"wrongInputValue\":\"TodoItem_wrongInputValue__t8L7N\",\"unselectable\":\"TodoItem_unselectable__oqDok\",\"done\":\"TodoItem_done__jL6MD\",\"deleteBtn\":\"TodoItem_deleteBtn__+ALDW\",\"DragHandleIcon\":\"TodoItem_DragHandleIcon__9DDbP\"};","import styles from '../TodoItem/TodoItem.module.css';\n\n\nexport const setElementPosition = (element, pageY) => {\n  const delta = pageY - element.offsetTop - (element.offsetHeight * .5)\n    - document.scrollingElement.scrollTop;\n\n  return element.style.transform = `translateY(${delta}px)`;\n};\n\n\nexport const shift = (pointer, thisElement, height, lastModify = false,\n  setIsShiftAllowed) => {\n  if (thisElement !== pointer\n      || (thisElement === pointer && lastModify)) {\n    thisElement.style.transform = `translateY(${height ?\n      height + 16 : height}px)`;\n  }\n  let next;\n  if (height) {\n    next = thisElement.nextElementSibling;\n  } else {\n    next = thisElement.previousElementSibling;\n  }\n\n  if (next) {\n    shift(pointer, next, height, lastModify);\n  }\n\n  if (setIsShiftAllowed) {\n    setIsShiftAllowed(false);\n  }\n};\n\n\nexport const setTransition = (element, time = 0) => {\n  element.style.transition = `transform ${time}s ease-out`;\n\n  const next = element.nextElementSibling;\n  if (next) {\n    setTransition(next, time);\n  }\n};\n\n\nexport const getHeight = (elementUnderPointer, element) => {\n  let height;\n  if (elementUnderPointer.style.transform.length < 16) {\n    height = element.offsetHeight;\n  } else {\n    height = 0;\n  }\n\n  return height;\n};\n\n\nexport const endOfGesture = (element, setElement,\n  setTriggeredElement, ulElement, stopInterval, intervalId,\n  triggeredElement, setOrderItems) => {\n  ulElement.current.style.cursor = 'auto';\n  ulElement.current.querySelectorAll('button').forEach(\n    item => item.style.pointerEvents = '');\n  ulElement.current.querySelectorAll('.draggable').forEach(\n    item => item.style.pointerEvents = '');\n\n  element.style.width = '';\n  element.style.position = '';\n  element.style.pointerEvents = '';\n  element.style.backgroundColor = '';\n  shift(element, element.parentElement.lastElementChild, 0, true);\n  setTransition(element.parentElement.firstElementChild, 0);\n  setElement(null);\n  setTriggeredElement(null);\n\n  if (stopInterval) {\n    stopInterval(intervalId);\n  }\n\n  document.body.classList.remove(styles.unselectable);\n\n  if (triggeredElement) {\n    setOrderItems(element.dataset.order, triggeredElement.dataset.order);\n  };\n};\n\n\nexport const scrollTo = (element, setIntervalId, ulElement, event) => {\n  if (element && event.pointerType !== 'touch') {\n    setIntervalId(setInterval(() => {\n      if (event.clientY > event.target.offsetParent.offsetTop) {\n        ulElement.current.parentElement.scrollTop += 30;\n      } else {\n        ulElement.current.parentElement.scrollTop -= 30;\n      }\n    }, 200));\n  };\n};\n\n\nexport const stopInterval = id => {\n  clearInterval(id);\n};\n\n\n// export const orderOfDroppedItem = (triggeredElement, eventTarget,\n//   element, setTriggeredElement) => {\n//   if (triggeredElement === eventTarget\n//     && element.dataset.order > eventTarget.dataset.order) {\n//     setTriggeredElement(eventTarget.previousElementSibling);\n//   } else if (triggeredElement === eventTarget\n//     && element.dataset.order < eventTarget.dataset.order) {\n//     setTriggeredElement(eventTarget.nextElementSibling);\n//   } else {\n//     setTriggeredElement(eventTarget);\n//   }\n// };\n","import {\n  shift,\n  setTransition,\n  getHeight,\n  setElementPosition,\n  // orderOfDroppedItem,\n} from './handlersUtils';\n\nexport const onPointerMoveHandler = (event, element) => {\n  if (element) {\n    const shift = event.pageY - element.offsetTop -\n      (element.scrollHeight * .5) - document.scrollingElement.scrollTop;\n\n    element.style.transform = `translateY(${shift}px)`;\n  }\n};\n\n\nexport const onPointerDownHandler = (event,\n  ulElement, element, setElement, setTimerId) => {\n  const eventTarget = event.target.closest('li');\n\n  if (event.pointerType === 'mouse'\n    && event.target.closest('.draggable')) {\n    ulElement.current.querySelectorAll(\n      'button').forEach(item => item.style.pointerEvents = 'none');\n    ulElement.current.querySelectorAll(\n      '.draggable').forEach(item => {\n      if (!event.target.closest('div').contains(item)) {\n        item.style.pointerEvents = 'none';\n      }\n    });\n  };\n\n  const doHandler = () => {\n    if (event.target.closest('.draggable')) {\n      if (ulElement.current.contains(eventTarget)) {\n        ulElement.current.style.cursor = 'move';\n        eventTarget.parentElement.style.height = `${\n          eventTarget.parentElement.offsetHeight}px`;\n        eventTarget.style.pointerEvents = 'none';\n        eventTarget.style.width = `${eventTarget.offsetWidth}px`;\n\n        if (eventTarget.nextElementSibling) {\n          shift(element,\n            eventTarget.nextElementSibling, eventTarget.offsetHeight);\n        }\n        eventTarget.style.position = 'fixed';\n        setElementPosition(eventTarget, event.nativeEvent.pageY);\n        setElement(eventTarget);\n      }\n    }\n  };\n\n\n  if (event.pointerType === 'touch'\n    && event.target.parentElement.classList[0] === 'draggable'\n    && !event.target.parentElement.previousElementSibling\n      .previousElementSibling.isContentEditable) {\n    const timer = setTimeout(() => {\n      eventTarget.style.backgroundColor = 'var(--dragging-element)';\n      doHandler();\n    }, 200);\n    setTimerId(timer);\n  } else if (event.pointerType !== 'touch') {\n    doHandler();\n  };\n};\n\n\nexport const onPointerOverHandler = (event,\n  ulElement, element,\n  // setTriggeredElement,\n  triggeredElement,\n  setOrderItems\n) => {\n  if (element) {\n    const eventTarget = document.elementFromPoint(\n      event.clientX, event.clientY).closest('li');\n\n    if (ulElement.current.contains(eventTarget)) {\n      const height = getHeight(eventTarget, element);\n\n      // orderOfDroppedItem(triggeredElement, eventTarget,\n      //   element, setTriggeredElement);\n\n      shift(element, eventTarget, height);\n      setTransition(eventTarget.parentElement.firstElementChild, 0);\n    }\n\n    if (element && eventTarget) {\n      setOrderItems(element.dataset.order, eventTarget.dataset.order);\n    }\n  }\n};\n\n\nexport const onTouchOverHandler = (event, element, ulElement,\n  triggeredElement, setTriggeredElement, timerId,\n  setIsShiftAllowed, isShiftAllowed, setOrderItems) => {\n  if (event.type === 'touchmove') {\n    clearTimeout(timerId);\n  }\n\n  const elFromPointer = document.elementFromPoint(\n    event.touches[0].pageX,\n    event.touches[0].pageY);\n\n  const closestLi = () => {\n    if (elFromPointer) {\n      return elFromPointer.closest('li');\n    }\n  };\n\n  const elementUnderPointer = closestLi();\n\n  if (!elementUnderPointer) {\n    setIsShiftAllowed(true);\n  }\n\n  if (element && isShiftAllowed\n      && ulElement.current.contains(elementUnderPointer)) {\n    // orderOfDroppedItem(triggeredElement, elementUnderPointer,\n    //   element, setTriggeredElement);\n\n\n    shift(element, elementUnderPointer,\n      getHeight(elementUnderPointer, element), null, setIsShiftAllowed);\n    setOrderItems(element.dataset.order, elementUnderPointer.dataset.order);\n  }\n};\n\n\nexport const onPointerUpListener = (element, triggeredElement,\n  endOfGesture, setElement, setTriggeredElement,\n  timerId, ulElement, setOrderItems) => {\n  if (event.pointerType === 'touch') {\n    clearTimeout(timerId);\n  }\n\n  if (element) {\n    return endOfGesture(element, setElement, setTriggeredElement, ulElement,\n      null, null, triggeredElement, setOrderItems);\n  }\n};\n\n\nexport const onPointerLeaveHandler = (\n  ulElement,\n  element,\n  endOfGesture,\n  setElement,\n  setTriggeredElement,\n  stopInterval,\n  intervalId,\n) => {\n  if (ulElement.current !== event.target && element) {\n    return endOfGesture(element, setElement, setTriggeredElement,\n      ulElement, stopInterval, intervalId);\n  }\n};\n\n\nexport const onContextMenuHandler = event => {\n  if (event.nativeEvent.pointerType === 'touch') {\n    event.preventDefault();\n  };\n};\n","import classNames from 'classnames';\nimport styles from './TodoItem.module.css';\n\nimport {\n  Button,\n  Checkbox,\n  Tooltip,\n} from '@material-ui/core';\nimport DeleteForeverTwoToneIcon from '@material-ui/icons/DeleteForeverTwoTone';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\n\nimport {\n  useEffect,\n  useState,\n  useRef,\n} from 'react';\n\n\nconst TodoItem = props => {\n  const itemEl = useRef(null);\n  const listEl = useRef(null);\n\n  const [\n    inputValue,\n    setInputvalue,\n  ] = useState(props.value);\n\n  useEffect(() => {\n    itemEl.current.focus();\n  }, [\n    props.isEditable,\n  ]);\n\n\n  return (\n    <Tooltip\n      title=\"Слишком длинное слово\"\n      placement=\"top\"\n      arrow\n      open={ props.isWrongValue }\n    >\n      <li\n        ref={ listEl }\n        className = { classNames({\n          [styles.item]: true,\n          [styles.done]: props.isDone,\n        }) }\n        data-order = { props.order }\n      >\n        <Checkbox\n          style={{\n            alignSelf: 'flex-start',\n          }}\n          checked={ props.isDone }\n          name={ `checked ${props.value.toString()}` }\n          onChange={ props.onChangeCheckbox }\n        />\n        <div\n          className={ styles.itemValueWrapper }\n        >\n          <span\n            ref={ itemEl }\n            className={ classNames({\n              [styles.itemValue]: true,\n              [styles.unselectable]: props.isSort,\n              [styles.wrongInputValue]: props.isWrongValue,\n            }) }\n            key={ props.id }\n            contentEditable={ props.isEditable }\n            suppressContentEditableWarning={ true }\n            onClick={ props.onSingleDoubleClick(\n              () => props.onChangeCheckbox(),\n              () => props.onEditItem(props.id, inputValue),\n            ) }\n            onInput={ () => setInputvalue(itemEl.current.textContent) }\n            onBlur={ () => props.onEditItem(props.id, inputValue) }\n            onKeyDown={ event => {\n              if (event.code === 'Enter' ||\n                  event.code === 'NumpadEnter') {\n                event.preventDefault();\n                props.onEditItem(props.id, inputValue);\n              } else if (event.code === 'Escape') {\n                itemEl.current.textContent = props.value;\n                props.onEditItem(props.id, props.value);\n              }\n            } }\n          >\n            { props.value }\n          </span>\n        </div>\n        <Button\n          className={ styles.deleteBtn }\n          onClick={ props.onDeleteItem }\n          title=\"Удалить дело\"\n        >\n          <DeleteForeverTwoToneIcon fontSize=\"medium\" />\n        </Button>\n        <div\n          className={ classNames(\n            'draggable',\n            styles.touchActionsOff,\n            styles.draggable,\n          ) }\n          onPointerDown = {\n            () => document.body.classList.add(styles.unselectable)}\n        >\n          <DragHandleIcon className={ styles.DragHandleIcon } />\n        </div>\n      </li>\n    </Tooltip>\n  );\n};\n\n\nexport default TodoItem;\n","const onSingleDoubleClick = (onSingleClickHandler, onDoubleClickHandler) => {\n  let time;\n  let timerId;\n  const delay = 200;\n\n\n  return function () {\n    if (!time) {\n      time = Date.now();\n      timerId = setTimeout(() => {\n        onSingleClickHandler();\n        time = null;\n      }, delay);\n    } else if (time) {\n      if ((Date.now() - time) < delay) {\n        clearTimeout(timerId);\n        onDoubleClickHandler();\n      };\n      time = null;\n    }\n  };\n};\n\nexport default onSingleDoubleClick;\n","import {\n  connect,\n} from 'react-redux';\n\nimport {\n  toggleItem,\n} from '../../store/actions/todo/toggleItemAction';\nimport {\n  deleteItem,\n} from '../../store/actions/deleteItemAction';\nimport {\n  editItem,\n  setIsWrongValue,\n} from '../../store/actions/todo/editItemAction';\nimport {\n  setOrderItems,\n} from '../../store/actions/todo/setFilters';\n\nimport TodoItem from './TodoItem';\n\nimport onSingleDoubleClick from '../../utils/onSingleDoubleClick';\nimport isNormalLength from '../../utils/isNormalLength';\n\n\nconst TodoItemContainer = props => {\n  const editItemWithValidation = (id, value) => {\n    if (isNormalLength(value)) {\n      return props.editItem(id, value);\n    } return props.setIsWrongValue(id);\n  };\n\n\n  return (\n    <TodoItem\n      { ...props }\n      onChangeCheckbox ={ () => props.toggleItem(props.id) }\n      onDeleteItem = { () => props.deleteItem(props.id) }\n      onEditItem = { editItemWithValidation }\n      onSingleDoubleClick = { onSingleDoubleClick }\n    />\n  );\n};\n\nexport default connect(\n  state => ({\n    isSort: state.todos.isSort,\n  }),\n  {\n    toggleItem,\n    deleteItem,\n    editItem,\n    setOrderItems,\n    setIsWrongValue,\n  }\n)(TodoItemContainer);\n","import styles from './DndList.module.css';\n\nimport {\n  useState,\n  useEffect,\n  useRef,\n} from 'react';\n\nimport {\n  endOfGesture,\n  scrollTo,\n  stopInterval,\n} from './handlersUtils';\n\nimport {\n  onPointerMoveHandler,\n  onPointerDownHandler,\n  onPointerOverHandler,\n  onTouchOverHandler,\n  onPointerUpListener,\n  onContextMenuHandler,\n  onPointerLeaveHandler,\n} from './handleEvents';\n\nimport TodoItemContainer from '../TodoItem/TodoItemContainer';\n\n\nconst DndList = ({\n  list,\n  isDisabled,\n  ...props\n}) => {\n  const [\n    element,\n    setElement,\n  ] = useState(null);\n\n  const [\n    triggeredElement,\n    setTriggeredElement,\n  ] = useState(null);\n\n  const [\n    timerId,\n    setTimerId,\n  ] = useState(null);\n\n  const [\n    intervalId,\n    setIntervalId,\n  ] = useState(null);\n\n  const [\n    isShiftAllowed,\n    setIsShiftAllowed,\n  ] = useState(true);\n\n  const ulElement = useRef(null);\n\n\n  useEffect(() => {\n    const onHtmlUpHandler = onPointerLeaveHandler.bind(\n      event,\n      ulElement,\n      element,\n      endOfGesture,\n      setElement,\n      setTriggeredElement,\n      stopInterval,\n      intervalId,\n    );\n\n    document.documentElement.addEventListener('pointerup',\n      onHtmlUpHandler);\n\n    return () => {\n      document.documentElement.removeEventListener('pointerup',\n        onHtmlUpHandler);\n    };\n  }, [\n    element,\n    intervalId,\n  ]);\n\n\n  useEffect(() => {\n    const parentOfList = ulElement.current.parentElement;\n    const scrollToWithArgs = scrollTo.bind(\n      event, element, setIntervalId, ulElement);\n\n    parentOfList.addEventListener(\n      'pointerleave', scrollToWithArgs);\n\n    return () => parentOfList.removeEventListener(\n      'pointerleave', scrollToWithArgs);\n  }, [\n    element,\n  ]);\n\n\n  useEffect(() => {\n    const parentOfList = ulElement.current.parentElement;\n    const stopCurrentInterval = stopInterval.bind(null, intervalId);\n\n    parentOfList.addEventListener(\n      'pointerenter', stopCurrentInterval);\n\n    return () => parentOfList.removeEventListener(\n      'pointerenter', stopCurrentInterval);\n  }, [\n    intervalId,\n  ]);\n\n\n  return (\n    <ul ref={ ulElement }\n      className={ styles.list }\n      onPointerDown={ event => {\n        if (!isDisabled) {\n          return onPointerDownHandler(\n            event,\n            ulElement,\n            element,\n            setElement,\n            setTimerId,\n          );\n        };\n      } }\n      onPointerMove={ event => onPointerMoveHandler(event, element) }\n      onTouchMove={ event => onTouchOverHandler(\n        event,\n        element,\n        ulElement,\n        triggeredElement,\n        setTriggeredElement,\n        timerId,\n        setIsShiftAllowed,\n        isShiftAllowed,\n        props.setOrderItems,\n      ) }\n      onPointerOver={ event => onPointerOverHandler(\n        event,\n        ulElement,\n        element,\n        // setTriggeredElement,\n        triggeredElement,\n        props.setOrderItems,\n      ) }\n      onPointerUp={ () => onPointerUpListener(\n        element,\n        triggeredElement,\n        endOfGesture,\n        setElement,\n        setTriggeredElement,\n        timerId,\n        ulElement,\n        props.setOrderItems,\n      ) }\n      onContextMenu={ onContextMenuHandler }\n    >\n      {\n        list.map(\n          item => (\n            <TodoItemContainer\n              key={ item.id.toString() }\n              { ...item }\n            />\n          )\n        )\n      }\n    </ul>\n  );\n};\n\nexport default DndList;\n","import {\n  connect,\n} from 'react-redux';\n\nimport {\n  setOrderItems,\n} from '../../store/actions/todo/setFilters';\n\nimport DndList from './DndList';\n\n\nconst DndListContainer = props => (\n  <>\n    <DndList { ...props } />\n  </>\n);\n\n\nexport default connect(\n  null,\n  {\n    setOrderItems,\n  },\n)(DndListContainer);\n","import ErrorMessages from '../ErrorMessages/ErrorMessages';\nimport withMargin from '../hoc/withMargin/withMargin';\nimport DndListContainer from '../DndList/DndListContainer';\n\n\nconst ItemList = props => {\n  const ErrorMessagesWithMargin = props => withMargin(\n    ErrorMessages,\n    'large',\n    props,\n  );\n\n  const list = props.items.filter(item => item.filter);\n\n  if (list.length > 0) {\n    return (\n      <DndListContainer\n        list={ list }\n        isDisabled={ props.isSort }\n      />\n    );\n  } return (\n    <ErrorMessagesWithMargin errorType=\"empty filter\" />\n  );\n};\n\nexport default ItemList;\n","import {\n  connect,\n} from 'react-redux';\nimport ItemList from './ItemList';\n\n\nconst ItemListContainer = props => (\n  <ItemList\n    items={ props.items }\n    {...props}\n  />\n);\n\n\nexport default connect(\n  state => ({\n    items: state.todos.items,\n    isSort: state.todos.isSort,\n  })\n)(ItemListContainer);\n","export const normalLength = 22;\n\nconst regExp = new RegExp(`.{${normalLength}}`);\n\n\nconst isNormalLength = string => {\n  const separateString = string.split(' ');\n\n  for (let index = 0; index < separateString.length; index++) {\n    if (regExp.test(separateString[index])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n\nexport default isNormalLength;\n"],"names":["shift","pointer","thisElement","height","next","lastModify","setIsShiftAllowed","style","transform","nextElementSibling","previousElementSibling","setTransition","element","time","transition","getHeight","elementUnderPointer","length","offsetHeight","endOfGesture","setElement","setTriggeredElement","ulElement","stopInterval","intervalId","triggeredElement","setOrderItems","current","cursor","querySelectorAll","forEach","item","pointerEvents","width","position","backgroundColor","parentElement","lastElementChild","firstElementChild","document","body","classList","remove","styles","dataset","order","scrollTo","setIntervalId","event","pointerType","setInterval","clientY","target","offsetParent","offsetTop","scrollTop","id","clearInterval","onPointerDownHandler","setTimerId","eventTarget","closest","contains","doHandler","offsetWidth","pageY","delta","scrollingElement","setElementPosition","nativeEvent","isContentEditable","setTimeout","onPointerLeaveHandler","onContextMenuHandler","preventDefault","props","itemEl","useRef","listEl","useState","value","inputValue","setInputvalue","useEffect","focus","isEditable","Tooltip","title","placement","arrow","open","isWrongValue","ref","className","classNames","isDone","Checkbox","alignSelf","checked","name","toString","onChange","onChangeCheckbox","isSort","contentEditable","suppressContentEditableWarning","onClick","onSingleDoubleClick","onEditItem","onInput","textContent","onBlur","onKeyDown","code","Button","onDeleteItem","DeleteForeverTwoTone","fontSize","onPointerDown","add","DragHandle","onSingleClickHandler","onDoubleClickHandler","timerId","Date","now","clearTimeout","connect","state","todos","toggleItem","deleteItem","editItem","setIsWrongValue","isNormalLength","list","isDisabled","isShiftAllowed","onHtmlUpHandler","bind","documentElement","addEventListener","removeEventListener","parentOfList","scrollToWithArgs","stopCurrentInterval","onPointerMove","scrollHeight","onPointerMoveHandler","onTouchMove","type","elFromPointer","elementFromPoint","touches","pageX","closestLi","onTouchOverHandler","onPointerOver","clientX","onPointerOverHandler","onPointerUp","onPointerUpListener","onContextMenu","map","ErrorMessagesWithMargin","withMargin","ErrorMessages","items","filter","errorType","normalLength","regExp","RegExp","string","separateString","split","index","test"],"sourceRoot":""}