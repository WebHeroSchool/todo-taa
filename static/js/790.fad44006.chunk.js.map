{"version":3,"file":"static/js/790.fad44006.chunk.js","mappings":"yNACA,EAAuB,sB,UCAvB,EAAuB,uBAAvB,EAA0D,4BAA1D,EAAwG,kCAAxG,EAA6J,mCAA7J,EAA4M,4BAA5M,EAA0P,kCAA1P,EAA2S,+BAA3S,EAAiV,uBAAjV,EAAoX,4BAApX,EAAia,iCCUpZA,EAAQ,SAARA,EACXC,EACAC,EACAC,GAIA,IAAIC,EAFJF,EAAYG,MAAMC,UAAlB,qBAA4CH,EAC1CA,EAAS,GAAKA,EADhB,QAIEC,EADED,EACKD,EAAYK,mBAEZL,EAAYM,yBAInBR,EAAMC,EAASG,EAAMD,IAKZM,EAAY,SAACC,EAAqBC,GAQ7C,OANID,EAAoBL,MAAMC,UAAUM,OAAS,GACtCD,EAAQE,aAER,GAOAC,EAAe,SAC1BH,EACAI,EACAC,EACAC,EACAC,GAEAF,EAAUG,QAAQd,MAAMe,OAAS,OACjCJ,EAAUG,QAAQE,iBAAiB,UAAUC,SAC3C,SAAAC,GAAI,OAAIA,EAAKlB,MAAMmB,cAAgB,MACrCR,EAAUG,QAAQE,iBAAiB,cAAcC,SAC/C,SAAAC,GAAI,OAAIA,EAAKlB,MAAMmB,cAAgB,MAErCb,EAAQN,MAAMoB,MAAQ,GACtBd,EAAQN,MAAMqB,SAAW,GACzBf,EAAQN,MAAMmB,cAAgB,GAC9Bb,EAAQN,MAAMsB,gBAAkB,GAChC3B,EAAMW,EAASA,EAAQiB,cAAcC,iBAAkB,GACvDd,EAAW,MAEPE,GACFA,EAAaC,GAGfY,SAASC,KAAKC,UAAUC,OAAOC,IAIpBC,EAAW,SACtBxB,EACAyB,EACApB,EACAqB,GAEI1B,GAAiC,UAAtB0B,EAAMC,aACnBF,EAAcG,aAAY,WACpBF,EAAMG,QAAUH,EAAMI,OAAOC,aAAaC,UAC5C3B,EAAUG,QAAQS,cAAcgB,WAAa,GAE7C5B,EAAUG,QAAQS,cAAcgB,WAAa,KAE9C,OAKM3B,EAAe,SAAA4B,GAC1BC,cAAcD,IC1EHE,EAAuB,SAClCV,EACArB,EACAL,EACAI,EACAiC,GAEA,IAAMC,EAAcZ,EAAMI,OAAOS,QAAQ,MAEf,UAAtBb,EAAMC,aACLD,EAAMI,OAAOS,QAAQ,gBACxBlC,EAAUG,QAAQE,iBAChB,UAAUC,SAAQ,SAAAC,GAAI,OAAIA,EAAKlB,MAAMmB,cAAgB,UACvDR,EAAUG,QAAQE,iBAChB,cAAcC,SAAQ,SAAAC,GACjBc,EAAMI,OAAOS,QAAQ,OAAOC,SAAS5B,KACxCA,EAAKlB,MAAMmB,cAAgB,YAKjC,IAAM4B,EAAY,WACZf,EAAMI,OAAOS,QAAQ,eACnBlC,EAAUG,QAAQgC,SAASF,KAC7BjC,EAAUG,QAAQd,MAAMe,OAAS,OACjC6B,EAAYrB,cAAcvB,MAAMF,OAAhC,UACE8C,EAAYrB,cAAcf,aAD5B,MAEAoC,EAAY5C,MAAMmB,cAAgB,OAClCyB,EAAY5C,MAAMoB,MAAlB,UAA6BwB,EAAYI,YAAzC,MAEIJ,EAAY1C,oBACdP,EAAMW,EACJsC,EAAY1C,mBAAoB0C,EAAYpC,cAEhDoC,EAAY5C,MAAMqB,SAAW,QD/CH,SAACf,EAAS2C,GAC1C,IAAMC,EAAQD,EAAQ3C,EAAQgC,UAAoC,GAAvBhC,EAAQE,aAC/CiB,SAAS0B,iBAAiBZ,UAEvBjC,EAAQN,MAAMC,UAAd,qBAAwCiD,EAAxC,OC4CDE,CAAmBR,EAAaZ,EAAMqB,YAAYJ,OAClDvC,EAAWkC,KAMS,UAAtBZ,EAAMC,aACuC,cAA5CD,EAAMI,OAAOb,cAAcI,UAAU,IACpCK,EAAMI,OAAOb,cAAcpB,uBAC5BA,uBAAuBmD,kBAMK,UAAtBtB,EAAMC,aACfc,IAFAJ,EAJcY,YAAW,WACvBX,EAAY5C,MAAMsB,gBAAkB,0BACpCyB,MACC,OA8EMS,EAAuB,SAAAxB,GACI,UAAlCA,EAAMqB,YAAYpB,aACpBD,EAAMyB,kB,sHC/BV,EAhGiB,SAAAC,GAAU,IAAD,IAClBC,GAASC,EAAAA,EAAAA,QAAO,MAChBC,GAASD,EAAAA,EAAAA,QAAO,MAEtB,GAGIE,EAAAA,EAAAA,UAASJ,EAAMK,OAHnB,eACEC,EADF,KAEEC,EAFF,KAYA,OAPAC,EAAAA,EAAAA,YAAU,WACRP,EAAO7C,QAAQqD,UACd,CACDT,EAAMU,cAKN,SAACC,EAAA,GAAD,CACEC,MAAM,uHACNC,UAAU,MACVC,OAAK,EACLC,KAAOf,EAAMgB,aAJf,UAME,gBACEC,IAAMd,EACNe,UAAcC,GAAAA,EAAU,eACrBhD,GAAc,IADO,SAErBA,EAAc6B,EAAMoB,QAFC,IAIxB,aAAepB,EAAMqB,MANvB,WAQE,SAACC,EAAA,EAAD,CACEhF,MAAO,CACLiF,UAAW,cAEbC,QAAUxB,EAAMoB,OAChBK,KAAI,kBAAczB,EAAMK,MAAMqB,YAC9BC,SAAW3B,EAAM4B,oBAEnB,gBACEV,UAAY/C,EADd,UAGE,iBACE8C,IAAMhB,EACNiB,UAAYC,GAAAA,EAAU,eACnBhD,GAAmB,IADA,SAEnBA,EAAsB6B,EAAM6B,SAFT,SAGnB1D,EAAyB6B,EAAMgB,cAHZ,IAMtBc,gBAAkB9B,EAAMU,WACxBqB,gCAAiC,EACjCC,QAAUhC,EAAMiC,qBACd,kBAAMjC,EAAM4B,sBACZ,kBAAM5B,EAAMkC,WAAWlC,EAAMlB,GAAIwB,MAEnC6B,QAAU,kBAAM5B,EAAcN,EAAO7C,QAAQgF,cAC7CC,OAAS,kBAAMrC,EAAMkC,WAAWlC,EAAMlB,GAAIwB,IAC1CgC,UAAY,SAAAhE,GACS,UAAfA,EAAMiE,MACS,gBAAfjE,EAAMiE,MACRjE,EAAMyB,iBACNC,EAAMkC,WAAWlC,EAAMlB,GAAIwB,IACH,WAAfhC,EAAMiE,OACftC,EAAO7C,QAAQgF,YAAcpC,EAAMK,MACnCL,EAAMkC,WAAWlC,EAAMlB,GAAIkB,EAAMK,SAvBvC,SA2BIL,EAAMK,OApBFL,EAAMlB,OAuBhB,SAAC0D,EAAA,EAAD,CACEtB,UAAY/C,EACZ6D,QAAUhC,EAAMyC,aAChB7B,MAAM,sEAHR,UAKE,SAAC8B,EAAA,EAAD,CAA0BC,SAAS,cAErC,gBACEzB,UAAYC,GAAAA,CACV,YACAhD,EACAA,GAEFyE,cACE,kBAAM7E,SAASC,KAAKC,UAAU4E,IAAI1E,IAPtC,UASE,SAAC2E,EAAA,EAAD,CAAgB5B,UAAY/C,YCnFtC,EAvB4B,SAAC4E,EAAsBC,GACjD,IAAIC,EACAC,EAIJ,OAAO,WACAD,EAMMA,IACJE,KAAKC,MAAQH,EAXR,MAYRI,aAAaH,GACbF,KAEFC,EAAO,OAVPA,EAAOE,KAAKC,MACZF,EAAUrD,YAAW,WACnBkD,IACAE,EAAO,OARC,Q,UCwChB,GAAeK,EAAAA,EAAAA,KACb,SAAAC,GAAK,MAAK,CACR1B,OAAQ0B,EAAMC,MAAM3B,UAEtB,CACE4B,WAAAA,EAAAA,EACAC,WAAAA,EAAAA,EACAC,SAAAA,EAAAA,GACAC,cAAAA,EAAAA,GACAC,gBAAAA,EAAAA,IATJ,EAnB0B,SAAA7D,GAQxB,OACE,SAAC,GAAD,kBACOA,GADP,IAEE4B,iBAAoB,kBAAM5B,EAAMyD,WAAWzD,EAAMlB,KACjD2D,aAAiB,kBAAMzC,EAAM0D,WAAW1D,EAAMlB,KAC9CoD,WAZ2B,SAACpD,EAAIuB,GAClC,OAAIyD,EAAAA,EAAAA,GAAezD,GACVL,EAAM2D,SAAS7E,EAAIuB,GACnBL,EAAM6D,gBAAgB/E,IAU7BmD,oBAAwBA,Q,wBC4F9B,EAxGgB,SAAC,GAIV,IAHL8B,EAGI,EAHJA,KACAC,EAEI,EAFJA,WACGhE,GACC,YACJ,GAGII,EAAAA,EAAAA,UAAS,MAHb,eACExD,EADF,KAEEI,EAFF,KAKA,GAGIoD,EAAAA,EAAAA,UAAS,MAHb,eACE8C,EADF,KAEEjE,EAFF,KAKA,GAGImB,EAAAA,EAAAA,UAAS,MAHb,eACEjD,EADF,KAEEkB,EAFF,KAKMpB,GAAYiD,EAAAA,EAAAA,QAAO,MAgCzB,OA7BAM,EAAAA,EAAAA,YAAU,WACR,IAAMyD,EAAehH,EAAUG,QAAQS,cACjCqG,EAAmB9F,EAAS+F,KAChC7F,MAAO1B,EAASyB,EAAepB,GAKjC,OAHAgH,EAAaG,iBACX,eAAgBF,GAEX,kBAAMD,EAAaI,oBACxB,eAAgBH,MACjB,CACDtH,KAIF4D,EAAAA,EAAAA,YAAU,WACR,IAAMyD,EAAehH,EAAUG,QAAQS,cACjCyG,EAAsBpH,EAAaiH,KAAK,KAAMhH,GAKpD,OAHA8G,EAAaG,iBACX,eAAgBE,GAEX,kBAAML,EAAaI,oBACxB,eAAgBC,MACjB,CACDnH,KAKA,eAAI8D,IAAMhE,EACRiE,UAAY/C,EACZyE,cAAgB,SAAAtE,GACd,IAAK0F,EACH,OAAOhF,EACLV,EACArB,EACAL,EACAI,EACAiC,IAINsF,cAAgB,SAAAjG,GAAK,OJtFS,SAACA,EAAO1B,GAC1C,GAAIA,EAAS,CACX,IAAMX,EAAQqC,EAAMiB,MAAQ3C,EAAQgC,UACV,GAAvBhC,EAAQ4H,aAAqBzG,SAAS0B,iBAAiBZ,UAE1DjC,EAAQN,MAAMC,UAAd,qBAAwCN,EAAxC,QIiF2BwI,CAAqBnG,EAAO1B,IACrD8H,YAAc,SAAApG,GAAK,OJAS,SAChCA,EACA1B,EACAK,EACAiG,EACAU,GACmB,cAAftF,EAAMqG,MACRtB,aAAaH,GAGf,IAAM0B,EAAgB7G,SAAS8G,iBAC7BvG,EAAMwG,QAAQ,GAAGC,MACjBzG,EAAMwG,QAAQ,GAAGvF,MAAQxB,SAAS0B,iBAAiBZ,WAQ/ClC,EANY,WAChB,GAAIiI,EACF,OAAOA,EAAczF,QAAQ,MAIL6F,GAExBpI,GACCK,EAAUG,QAAQgC,SAASzC,KAC9BV,EAAMW,EAASD,EACbD,EAAUC,EAAqBC,IAGjCgH,EAAchH,EAAQqI,QAAQ5D,MAAO1E,EAAoBsI,QAAQ5D,QI5BxC6D,CACrB5G,EACA1B,EACAK,EACAiG,EACAlD,EAAM4D,gBAERuB,cAAgB,SAAA7G,GAAK,OJ3BS,SAClCA,EACArB,EACAL,EACAgH,GAEA,GAAIhH,EAAS,CACX,IAAMsC,EAAcnB,SAAS8G,iBAC3BvG,EAAM8G,QAAS9G,EAAMG,SAASU,QAAQ,MAExC,GAAIlC,EAAUG,QAAQgC,SAASF,GAAc,CAC3C,IAAM9C,EAASM,EAAUwC,EAAatC,GAEtCX,EAAMW,EAASsC,EAAa9C,GAC5BwH,EAAchH,EAAQqI,QAAQ5D,MAAOnC,EAAY+F,QAAQ5D,SIahCgE,CACvB/G,EACArB,EACAL,EACAoD,EAAM4D,gBAER0B,YAAc,kBJoBe,SACjC1I,EACAG,EACAC,EACAkG,EACAjG,GAMA,GAJ0B,UAAtBqB,MAAMC,aACR8E,aAAaH,GAGXtG,EACF,OAAOG,EAAaH,EAASI,EAAYC,GIhCnBsI,CAClB3I,EACAG,EACAC,EACAkG,EACAjG,EACA+C,EAAM4D,gBAER4B,cAAgB1F,EAnClB,SAsCIiE,EAAK0B,KACH,SAAAjI,GAAI,OACF,SAAC,GAAD,UAEOA,GADCA,EAAKsB,GAAG4C,kBCtG5B,GAAe4B,EAAAA,EAAAA,IACb,KACA,CACEM,cAAAA,EAAAA,IAHJ,EAPyB,SAAA5D,GAAK,OAC5B,+BACE,SAAC,GAAD,UAAcA,SCalB,EArBiB,SAAAA,GACf,IAAM0F,EAA0B,SAAA1F,GAAK,OAAI2F,EAAAA,EAAAA,GACvCC,EAAAA,QACA,QACA5F,IAGI+D,EAAO/D,EAAM6F,MAAMC,QAAO,SAAAtI,GAAI,OAAIA,EAAKsI,UAE7C,OAAI/B,EAAKlH,OAAS,GAEd,SAAC,EAAD,CACEkH,KAAOA,EACPC,WAAahE,EAAM6B,UAIvB,SAAC6D,EAAD,CAAyBK,UAAU,kBCRvC,GAAezC,EAAAA,EAAAA,KACb,SAAAC,GAAK,MAAK,CACRsC,MAAOtC,EAAMC,MAAMqC,MACnBhE,OAAQ0B,EAAMC,MAAM3B,UAHxB,EAR0B,SAAA7B,GAAK,OAC7B,SAAC,GAAD,QACE6F,MAAQ7F,EAAM6F,OACV7F,Q,qDCTD,IAAMgG,EAAe,GAEtBC,EAAS,IAAIC,OAAJ,YAAgBF,EAAhB,MAgBf,IAbuB,SAAAG,GAGrB,IAFA,IAAMC,EAAiBD,EAAOE,MAAM,KAE3BC,EAAQ,EAAGA,EAAQF,EAAevJ,OAAQyJ,IACjD,GAAIL,EAAOM,KAAKH,EAAeE,IAC7B,OAAO,EAIX,OAAO","sources":["webpack://todo/./src/components/DndList/DndList.module.css?b672","webpack://todo/./src/components/TodoItem/TodoItem.module.css?a40f","components/DndList/handlersUtils.js","components/DndList/handleEvents.js","components/TodoItem/TodoItem.jsx","utils/onSingleDoubleClick.js","components/TodoItem/TodoItemContainer.jsx","components/DndList/DndList.jsx","components/DndList/DndListContainer.jsx","components/ItemList/ItemList.jsx","components/ItemList/ItemListContainer.jsx","utils/isNormalLength.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"DndList_list__q+5qk\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"TodoItem_item__FsVjq\",\"draggable\":\"TodoItem_draggable__7VAqp\",\"touchActionsOff\":\"TodoItem_touchActionsOff__RGtYo\",\"itemValueWrapper\":\"TodoItem_itemValueWrapper__FBWF3\",\"itemValue\":\"TodoItem_itemValue__mkxvo\",\"wrongInputValue\":\"TodoItem_wrongInputValue__t8L7N\",\"unselectable\":\"TodoItem_unselectable__oqDok\",\"done\":\"TodoItem_done__jL6MD\",\"deleteBtn\":\"TodoItem_deleteBtn__+ALDW\",\"DragHandleIcon\":\"TodoItem_DragHandleIcon__9DDbP\"};","import styles from '../TodoItem/TodoItem.module.css';\n\n\nexport const setElementPosition = (element, pageY) => {\n  const delta = pageY - element.offsetTop - (element.offsetHeight * .5)\n    - document.scrollingElement.scrollTop;\n\n  return element.style.transform = `translateY(${delta}px)`;\n};\n\n\nexport const shift = (\n  pointer,\n  thisElement,\n  height,\n) => {\n  thisElement.style.transform = `translateY(${height ?\n    height + 16 : height}px)`;\n  let next;\n  if (height) {\n    next = thisElement.nextElementSibling;\n  } else {\n    next = thisElement.previousElementSibling;\n  }\n\n  if (next) {\n    shift(pointer, next, height);\n  }\n};\n\n\nexport const getHeight = (elementUnderPointer, element) => {\n  let height;\n  if (elementUnderPointer.style.transform.length < 16) {\n    height = element.offsetHeight;\n  } else {\n    height = 0;\n  }\n\n  return height;\n};\n\n\nexport const endOfGesture = (\n  element,\n  setElement,\n  ulElement,\n  stopInterval,\n  intervalId,\n) => {\n  ulElement.current.style.cursor = 'auto';\n  ulElement.current.querySelectorAll('button').forEach(\n    item => item.style.pointerEvents = '');\n  ulElement.current.querySelectorAll('.draggable').forEach(\n    item => item.style.pointerEvents = '');\n\n  element.style.width = '';\n  element.style.position = '';\n  element.style.pointerEvents = '';\n  element.style.backgroundColor = '';\n  shift(element, element.parentElement.lastElementChild, 0);\n  setElement(null);\n\n  if (stopInterval) {\n    stopInterval(intervalId);\n  }\n\n  document.body.classList.remove(styles.unselectable);\n};\n\n\nexport const scrollTo = (\n  element,\n  setIntervalId,\n  ulElement,\n  event\n) => {\n  if (element && event.pointerType !== 'touch') {\n    setIntervalId(setInterval(() => {\n      if (event.clientY > event.target.offsetParent.offsetTop) {\n        ulElement.current.parentElement.scrollTop += 30;\n      } else {\n        ulElement.current.parentElement.scrollTop -= 30;\n      }\n    }, 200));\n  };\n};\n\n\nexport const stopInterval = id => {\n  clearInterval(id);\n};\n","import {\n  shift,\n  getHeight,\n  setElementPosition,\n} from './handlersUtils';\n\nexport const onPointerMoveHandler = (event, element) => {\n  if (element) {\n    const shift = event.pageY - element.offsetTop -\n      (element.scrollHeight * .5) - document.scrollingElement.scrollTop;\n\n    element.style.transform = `translateY(${shift}px)`;\n  }\n};\n\n\nexport const onPointerDownHandler = (\n  event,\n  ulElement,\n  element,\n  setElement,\n  setTimerId\n) => {\n  const eventTarget = event.target.closest('li');\n\n  if (event.pointerType === 'mouse'\n    && event.target.closest('.draggable')) {\n    ulElement.current.querySelectorAll(\n      'button').forEach(item => item.style.pointerEvents = 'none');\n    ulElement.current.querySelectorAll(\n      '.draggable').forEach(item => {\n      if (!event.target.closest('div').contains(item)) {\n        item.style.pointerEvents = 'none';\n      }\n    });\n  };\n\n  const doHandler = () => {\n    if (event.target.closest('.draggable')) {\n      if (ulElement.current.contains(eventTarget)) {\n        ulElement.current.style.cursor = 'move';\n        eventTarget.parentElement.style.height = `${\n          eventTarget.parentElement.offsetHeight}px`;\n        eventTarget.style.pointerEvents = 'none';\n        eventTarget.style.width = `${eventTarget.offsetWidth}px`;\n\n        if (eventTarget.nextElementSibling) {\n          shift(element,\n            eventTarget.nextElementSibling, eventTarget.offsetHeight);\n        }\n        eventTarget.style.position = 'fixed';\n        setElementPosition(eventTarget, event.nativeEvent.pageY);\n        setElement(eventTarget);\n      }\n    }\n  };\n\n\n  if (event.pointerType === 'touch'\n    && event.target.parentElement.classList[0] === 'draggable'\n    && !event.target.parentElement.previousElementSibling\n      .previousElementSibling.isContentEditable) {\n    const timer = setTimeout(() => {\n      eventTarget.style.backgroundColor = 'var(--dragging-element)';\n      doHandler();\n    }, 200);\n    setTimerId(timer);\n  } else if (event.pointerType !== 'touch') {\n    doHandler();\n  };\n};\n\n\nexport const onPointerOverHandler = (\n  event,\n  ulElement,\n  element,\n  setOrderItems,\n) => {\n  if (element) {\n    const eventTarget = document.elementFromPoint(\n      event.clientX, event.clientY).closest('li');\n\n    if (ulElement.current.contains(eventTarget)) {\n      const height = getHeight(eventTarget, element);\n\n      shift(element, eventTarget, height);\n      setOrderItems(element.dataset.order, eventTarget.dataset.order);\n    }\n  }\n};\n\n\nexport const onTouchOverHandler = (\n  event,\n  element,\n  ulElement,\n  timerId,\n  setOrderItems) => {\n  if (event.type === 'touchmove') {\n    clearTimeout(timerId);\n  }\n\n  const elFromPointer = document.elementFromPoint(\n    event.touches[0].pageX,\n    event.touches[0].pageY - document.scrollingElement.scrollTop);\n\n  const closestLi = () => {\n    if (elFromPointer) {\n      return elFromPointer.closest('li');\n    }\n  };\n\n  const elementUnderPointer = closestLi();\n\n  if (element\n    && ulElement.current.contains(elementUnderPointer)) {\n    shift(element, elementUnderPointer,\n      getHeight(elementUnderPointer, element),\n    );\n\n    setOrderItems(element.dataset.order, elementUnderPointer.dataset.order);\n  }\n};\n\n\nexport const onPointerUpListener = (\n  element,\n  endOfGesture,\n  setElement,\n  timerId,\n  ulElement,\n) => {\n  if (event.pointerType === 'touch') {\n    clearTimeout(timerId);\n  }\n\n  if (element) {\n    return endOfGesture(element, setElement, ulElement);\n  }\n};\n\n\nexport const onContextMenuHandler = event => {\n  if (event.nativeEvent.pointerType === 'touch') {\n    event.preventDefault();\n  };\n};\n","import classNames from 'classnames';\nimport styles from './TodoItem.module.css';\n\nimport {\n  Button,\n  Checkbox,\n  Tooltip,\n} from '@material-ui/core';\nimport DeleteForeverTwoToneIcon from '@material-ui/icons/DeleteForeverTwoTone';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\n\nimport {\n  useEffect,\n  useState,\n  useRef,\n} from 'react';\n\n\nconst TodoItem = props => {\n  const itemEl = useRef(null);\n  const listEl = useRef(null);\n\n  const [\n    inputValue,\n    setInputvalue,\n  ] = useState(props.value);\n\n  useEffect(() => {\n    itemEl.current.focus();\n  }, [\n    props.isEditable,\n  ]);\n\n\n  return (\n    <Tooltip\n      title=\"Слишком длинное слово\"\n      placement=\"top\"\n      arrow\n      open={ props.isWrongValue }\n    >\n      <li\n        ref={ listEl }\n        className = { classNames({\n          [styles.item]: true,\n          [styles.done]: props.isDone,\n        }) }\n        data-order = { props.order }\n      >\n        <Checkbox\n          style={{\n            alignSelf: 'flex-start',\n          }}\n          checked={ props.isDone }\n          name={ `checked ${props.value.toString()}` }\n          onChange={ props.onChangeCheckbox }\n        />\n        <div\n          className={ styles.itemValueWrapper }\n        >\n          <span\n            ref={ itemEl }\n            className={ classNames({\n              [styles.itemValue]: true,\n              [styles.unselectable]: props.isSort,\n              [styles.wrongInputValue]: props.isWrongValue,\n            }) }\n            key={ props.id }\n            contentEditable={ props.isEditable }\n            suppressContentEditableWarning={ true }\n            onClick={ props.onSingleDoubleClick(\n              () => props.onChangeCheckbox(),\n              () => props.onEditItem(props.id, inputValue),\n            ) }\n            onInput={ () => setInputvalue(itemEl.current.textContent) }\n            onBlur={ () => props.onEditItem(props.id, inputValue) }\n            onKeyDown={ event => {\n              if (event.code === 'Enter' ||\n                  event.code === 'NumpadEnter') {\n                event.preventDefault();\n                props.onEditItem(props.id, inputValue);\n              } else if (event.code === 'Escape') {\n                itemEl.current.textContent = props.value;\n                props.onEditItem(props.id, props.value);\n              }\n            } }\n          >\n            { props.value }\n          </span>\n        </div>\n        <Button\n          className={ styles.deleteBtn }\n          onClick={ props.onDeleteItem }\n          title=\"Удалить дело\"\n        >\n          <DeleteForeverTwoToneIcon fontSize=\"medium\" />\n        </Button>\n        <div\n          className={ classNames(\n            'draggable',\n            styles.touchActionsOff,\n            styles.draggable,\n          ) }\n          onPointerDown = {\n            () => document.body.classList.add(styles.unselectable)}\n        >\n          <DragHandleIcon className={ styles.DragHandleIcon } />\n        </div>\n      </li>\n    </Tooltip>\n  );\n};\n\n\nexport default TodoItem;\n","const onSingleDoubleClick = (onSingleClickHandler, onDoubleClickHandler) => {\n  let time;\n  let timerId;\n  const delay = 200;\n\n\n  return function () {\n    if (!time) {\n      time = Date.now();\n      timerId = setTimeout(() => {\n        onSingleClickHandler();\n        time = null;\n      }, delay);\n    } else if (time) {\n      if ((Date.now() - time) < delay) {\n        clearTimeout(timerId);\n        onDoubleClickHandler();\n      };\n      time = null;\n    }\n  };\n};\n\nexport default onSingleDoubleClick;\n","import {\n  connect,\n} from 'react-redux';\n\nimport {\n  toggleItem,\n} from '../../store/actions/todo/toggleItemAction';\nimport {\n  deleteItem,\n} from '../../store/actions/deleteItemAction';\nimport {\n  editItem,\n  setIsWrongValue,\n} from '../../store/actions/todo/editItemAction';\nimport {\n  setOrderItems,\n} from '../../store/actions/todo/setFilters';\n\nimport TodoItem from './TodoItem';\n\nimport onSingleDoubleClick from '../../utils/onSingleDoubleClick';\nimport isNormalLength from '../../utils/isNormalLength';\n\n\nconst TodoItemContainer = props => {\n  const editItemWithValidation = (id, value) => {\n    if (isNormalLength(value)) {\n      return props.editItem(id, value);\n    } return props.setIsWrongValue(id);\n  };\n\n\n  return (\n    <TodoItem\n      { ...props }\n      onChangeCheckbox ={ () => props.toggleItem(props.id) }\n      onDeleteItem = { () => props.deleteItem(props.id) }\n      onEditItem = { editItemWithValidation }\n      onSingleDoubleClick = { onSingleDoubleClick }\n    />\n  );\n};\n\nexport default connect(\n  state => ({\n    isSort: state.todos.isSort,\n  }),\n  {\n    toggleItem,\n    deleteItem,\n    editItem,\n    setOrderItems,\n    setIsWrongValue,\n  }\n)(TodoItemContainer);\n","import styles from './DndList.module.css';\n\nimport {\n  useState,\n  useEffect,\n  useRef,\n} from 'react';\n\nimport {\n  endOfGesture,\n  scrollTo,\n  stopInterval,\n} from './handlersUtils';\n\nimport {\n  onPointerMoveHandler,\n  onPointerDownHandler,\n  onPointerOverHandler,\n  onTouchOverHandler,\n  onPointerUpListener,\n  onContextMenuHandler,\n} from './handleEvents';\n\nimport TodoItemContainer from '../TodoItem/TodoItemContainer';\n\n\nconst DndList = ({\n  list,\n  isDisabled,\n  ...props\n}) => {\n  const [\n    element,\n    setElement,\n  ] = useState(null);\n\n  const [\n    timerId,\n    setTimerId,\n  ] = useState(null);\n\n  const [\n    intervalId,\n    setIntervalId,\n  ] = useState(null);\n\n  const ulElement = useRef(null);\n\n\n  useEffect(() => {\n    const parentOfList = ulElement.current.parentElement;\n    const scrollToWithArgs = scrollTo.bind(\n      event, element, setIntervalId, ulElement);\n\n    parentOfList.addEventListener(\n      'pointerleave', scrollToWithArgs);\n\n    return () => parentOfList.removeEventListener(\n      'pointerleave', scrollToWithArgs);\n  }, [\n    element,\n  ]);\n\n\n  useEffect(() => {\n    const parentOfList = ulElement.current.parentElement;\n    const stopCurrentInterval = stopInterval.bind(null, intervalId);\n\n    parentOfList.addEventListener(\n      'pointerenter', stopCurrentInterval);\n\n    return () => parentOfList.removeEventListener(\n      'pointerenter', stopCurrentInterval);\n  }, [\n    intervalId,\n  ]);\n\n\n  return (\n    <ul ref={ ulElement }\n      className={ styles.list }\n      onPointerDown={ event => {\n        if (!isDisabled) {\n          return onPointerDownHandler(\n            event,\n            ulElement,\n            element,\n            setElement,\n            setTimerId,\n          );\n        };\n      } }\n      onPointerMove={ event => onPointerMoveHandler(event, element) }\n      onTouchMove={ event => onTouchOverHandler(\n        event,\n        element,\n        ulElement,\n        timerId,\n        props.setOrderItems,\n      ) }\n      onPointerOver={ event => onPointerOverHandler(\n        event,\n        ulElement,\n        element,\n        props.setOrderItems,\n      ) }\n      onPointerUp={ () => onPointerUpListener(\n        element,\n        endOfGesture,\n        setElement,\n        timerId,\n        ulElement,\n        props.setOrderItems,\n      ) }\n      onContextMenu={ onContextMenuHandler }\n    >\n      {\n        list.map(\n          item => (\n            <TodoItemContainer\n              key={ item.id.toString() }\n              { ...item }\n            />\n          )\n        )\n      }\n    </ul>\n  );\n};\n\nexport default DndList;\n","import {\n  connect,\n} from 'react-redux';\n\nimport {\n  setOrderItems,\n} from '../../store/actions/todo/setFilters';\n\nimport DndList from './DndList';\n\n\nconst DndListContainer = props => (\n  <>\n    <DndList { ...props } />\n  </>\n);\n\n\nexport default connect(\n  null,\n  {\n    setOrderItems,\n  },\n)(DndListContainer);\n","import ErrorMessages from '../ErrorMessages/ErrorMessages';\nimport withMargin from '../hoc/withMargin/withMargin';\nimport DndListContainer from '../DndList/DndListContainer';\n\n\nconst ItemList = props => {\n  const ErrorMessagesWithMargin = props => withMargin(\n    ErrorMessages,\n    'large',\n    props,\n  );\n\n  const list = props.items.filter(item => item.filter);\n\n  if (list.length > 0) {\n    return (\n      <DndListContainer\n        list={ list }\n        isDisabled={ props.isSort }\n      />\n    );\n  } return (\n    <ErrorMessagesWithMargin errorType=\"empty filter\" />\n  );\n};\n\nexport default ItemList;\n","import {\n  connect,\n} from 'react-redux';\nimport ItemList from './ItemList';\n\n\nconst ItemListContainer = props => (\n  <ItemList\n    items={ props.items }\n    {...props}\n  />\n);\n\n\nexport default connect(\n  state => ({\n    items: state.todos.items,\n    isSort: state.todos.isSort,\n  })\n)(ItemListContainer);\n","export const normalLength = 22;\n\nconst regExp = new RegExp(`.{${normalLength}}`);\n\n\nconst isNormalLength = string => {\n  const separateString = string.split(' ');\n\n  for (let index = 0; index < separateString.length; index++) {\n    if (regExp.test(separateString[index])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n\nexport default isNormalLength;\n"],"names":["shift","pointer","thisElement","height","next","style","transform","nextElementSibling","previousElementSibling","getHeight","elementUnderPointer","element","length","offsetHeight","endOfGesture","setElement","ulElement","stopInterval","intervalId","current","cursor","querySelectorAll","forEach","item","pointerEvents","width","position","backgroundColor","parentElement","lastElementChild","document","body","classList","remove","styles","scrollTo","setIntervalId","event","pointerType","setInterval","clientY","target","offsetParent","offsetTop","scrollTop","id","clearInterval","onPointerDownHandler","setTimerId","eventTarget","closest","contains","doHandler","offsetWidth","pageY","delta","scrollingElement","setElementPosition","nativeEvent","isContentEditable","setTimeout","onContextMenuHandler","preventDefault","props","itemEl","useRef","listEl","useState","value","inputValue","setInputvalue","useEffect","focus","isEditable","Tooltip","title","placement","arrow","open","isWrongValue","ref","className","classNames","isDone","order","Checkbox","alignSelf","checked","name","toString","onChange","onChangeCheckbox","isSort","contentEditable","suppressContentEditableWarning","onClick","onSingleDoubleClick","onEditItem","onInput","textContent","onBlur","onKeyDown","code","Button","onDeleteItem","DeleteForeverTwoTone","fontSize","onPointerDown","add","DragHandle","onSingleClickHandler","onDoubleClickHandler","time","timerId","Date","now","clearTimeout","connect","state","todos","toggleItem","deleteItem","editItem","setOrderItems","setIsWrongValue","isNormalLength","list","isDisabled","parentOfList","scrollToWithArgs","bind","addEventListener","removeEventListener","stopCurrentInterval","onPointerMove","scrollHeight","onPointerMoveHandler","onTouchMove","type","elFromPointer","elementFromPoint","touches","pageX","closestLi","dataset","onTouchOverHandler","onPointerOver","clientX","onPointerOverHandler","onPointerUp","onPointerUpListener","onContextMenu","map","ErrorMessagesWithMargin","withMargin","ErrorMessages","items","filter","errorType","normalLength","regExp","RegExp","string","separateString","split","index","test"],"sourceRoot":""}